[project]
name = "fastapi-tortoise-async-test-demo"
version = "0.2.0"
description = ""
authors = [{name="Waket Zheng", email="waketzheng@gmail.com"}]
requires-python = ">=3.9"
dependencies = [
    "fastapi[standard]>=0.116.1",
    "fastapi-cdn-host>=0.9.2",
    "tortoise-orm[asyncpg]>=0.25.1",
    "aerich[toml]>=0.9.1",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "mypy>=1.17.1",
    "coverage>=7.10.4",
    "asynctor[fastapi]>=0.8.6",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = false

[tool.pdm.scripts]
deps = "uv sync"
test = "coverage run -m pytest -s"
report = "coverage report -m"
lint = {composite = ["ruff format", "ruff check --fix {args}", "mypy ."]}

[tool.mypy]
pretty = true
ignore_missing_imports = true
check_untyped_defs = true

[tool.coverage.report]
omit = ["*/tests/*"]
exclude_also = [
    "pragma: no cover",
    "@overload",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[tool.ruff.lint]
extend-select = [
    "I",      # https://docs.astral.sh/ruff/rules/#isort-i
    "SIM",    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "FA",     # https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
    "UP",     # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "RUF100", # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
]
